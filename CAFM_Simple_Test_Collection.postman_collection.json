{
	"info": {
		"_postman_id": "simple-cafm-test",
		"name": "CAFM Simple Test Collection",
		"description": "Simplified collection for testing CAFM Backend API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Admin Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse response",
							"const response = pm.response.json();",
							"",
							"// Save token to global variables",
							"pm.globals.set('token', response.accessToken);",
							"",
							"// Log success",
							"console.log('Token saved to globals:', response.accessToken);",
							"",
							"// Test response",
							"pm.test('Login successful', function () {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(response.accessToken).to.exist;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"admin@cafm.com\",\n    \"password\": \"admin123\"\n}"
				},
				"url": {
					"raw": "http://localhost:8080/api/v1/auth/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"auth",
						"login"
					]
				}
			}
		},
		{
			"name": "2. Get Current User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Check if token exists",
							"const token = pm.globals.get('token');",
							"if (!token) {",
							"    console.error('No token found! Please run Admin Login first.');",
							"} else {",
							"    console.log('Using token:', token.substring(0, 30) + '...');",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8080/api/v1/auth/me",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"auth",
						"me"
					]
				}
			}
		},
		{
			"name": "3. Get All Users",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8080/api/v1/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"users"
					]
				}
			}
		},
		{
			"name": "4. Get All Companies",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8080/api/v1/companies",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"companies"
					]
				}
			}
		},
		{
			"name": "5. Get All Assets",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8080/api/v1/assets",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"assets"
					]
				}
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "",
			"type": "string"
		}
	]
}