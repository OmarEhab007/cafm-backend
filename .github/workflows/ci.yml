name: 🚀 CAFM Backend CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  JAVA_VERSION: '23'
  MAVEN_OPTS: '-Xmx2048m -XX:MaxMetaspaceSize=512m'

jobs:
  # =================================================
  # Security & Quality Analysis
  # =================================================
  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better analysis

      - name: 🔍 Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: 📤 Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: 🔐 Detect secrets with GitLeaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

  # =================================================
  # Build & Test Matrix
  # =================================================
  test:
    name: 🧪 Test on Java ${{ matrix.java }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        java: ['23']
        include:
          - os: ubuntu-latest
            java: '21'  # Test compatibility with Java 21

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: cafm_test_db
          POSTGRES_USER: cafm_test_user
          POSTGRES_PASSWORD: test_password_secure_123
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: maven

      - name: 🔧 Verify Java installation
        run: |
          java -version
          javac -version
          echo "JAVA_HOME: $JAVA_HOME"

      - name: 📊 Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: 🔍 Verify Maven configuration
        run: |
          mvn --version
          mvn help:effective-settings

      - name: 🧪 Run tests with coverage
        env:
          # Test database configuration
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: cafm_test_db
          DB_USERNAME: cafm_test_user
          DB_PASSWORD: test_password_secure_123
          
          # Test Redis configuration
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          REDIS_PASSWORD: ""
          
          # Test JWT configuration
          JWT_SECRET: test_jwt_secret_key_256_bits_minimum_for_secure_testing_purposes_only
          
          # Test environment
          SPRING_PROFILES_ACTIVE: test
        run: |
          mvn clean verify \
            -Dspring.profiles.active=test \
            -Dspring.datasource.url=jdbc:postgresql://localhost:5432/cafm_test_db \
            -Dspring.datasource.username=cafm_test_user \
            -Dspring.datasource.password=test_password_secure_123 \
            -Dmaven.test.failure.ignore=false \
            --batch-mode --no-transfer-progress

      - name: 📈 Generate test report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: 📋 Test Results (Java ${{ matrix.java }})
          path: target/surefire-reports/*.xml
          reporter: java-junit
          fail-on-error: true

      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: matrix.java == '23'  # Only upload coverage once
        with:
          file: ./target/site/jacoco/jacoco.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: 🏗️ Build JAR artifact
        if: matrix.java == '23'
        run: |
          mvn clean package -DskipTests --batch-mode --no-transfer-progress
          ls -la target/

      - name: 📦 Upload build artifacts
        if: matrix.java == '23'
        uses: actions/upload-artifact@v3
        with:
          name: cafm-backend-jar
          path: target/*.jar
          retention-days: 30

  # =================================================
  # Docker Build & Security Scan
  # =================================================
  docker-build:
    name: 🐳 Docker Build & Scan
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Download JAR artifact
        uses: actions/download-artifact@v3
        with:
          name: cafm-backend-jar
          path: target/

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🏗️ Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: cafm-backend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/cafm-backend.tar

      - name: 🔍 Run Trivy container scan
        uses: aquasecurity/trivy-action@master
        with:
          input: /tmp/cafm-backend.tar
          format: 'sarif'
          output: 'trivy-container-results.sarif'

      - name: 📤 Upload container scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-container-results.sarif'

  # =================================================
  # Deployment (when ready)
  # =================================================
  deploy-staging:
    name: 🚀 Deploy to Staging
    runs-on: ubuntu-latest
    needs: [test, docker-build, security-scan]
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    environment: staging
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Deploy to staging
        run: |
          echo "🚀 Deploying to staging environment..."
          # Add your deployment commands here
          # Example: kubectl apply -f k8s/staging/
          # Example: docker-compose -f docker-compose.staging.yml up -d

  deploy-production:
    name: 🏭 Deploy to Production
    runs-on: ubuntu-latest
    needs: [test, docker-build, security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏭 Deploy to production
        run: |
          echo "🏭 Deploying to production environment..."
          # Add your production deployment commands here
          # Example: kubectl apply -f k8s/production/
          # Example: helm upgrade cafm-backend ./helm-chart

  # =================================================
  # Notification & Cleanup
  # =================================================
  notify:
    name: 📢 Notify Results
    runs-on: ubuntu-latest
    needs: [test, docker-build, security-scan]
    if: always()
    
    steps:
      - name: 📢 Notify on success
        if: ${{ needs.test.result == 'success' && needs.docker-build.result == 'success' && needs.security-scan.result == 'success' }}
        run: |
          echo "✅ All checks passed! Build is ready for deployment."

      - name: 🚨 Notify on failure
        if: ${{ needs.test.result == 'failure' || needs.docker-build.result == 'failure' || needs.security-scan.result == 'failure' }}
        run: |
          echo "❌ Build failed! Please check the logs and fix issues."
          exit 1

  # =================================================
  # Dependency Updates (Weekly)
  # =================================================
  dependency-check:
    name: 🔄 Dependency Security Check
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'

      - name: 🔍 OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'CAFM Backend'
          path: '.'
          format: 'ALL'

      - name: 📤 Upload dependency check results
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: reports/