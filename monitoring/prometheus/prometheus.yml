# Prometheus Configuration for CAFM Backend Monitoring
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'cafm-production'
    environment: 'production'

# Rule files for alerting
rule_files:
  - "/etc/prometheus/rules/*.yml"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 15s
    metrics_path: /metrics

  # CAFM Backend Application
  - job_name: 'cafm-backend'
    static_configs:
      - targets: ['host.docker.internal:8080']
    metrics_path: /actuator/prometheus
    scrape_interval: 10s
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']

  # Node Exporter - System metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s

  # Redis Exporter
  - job_name: 'redis-exporter'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 15s

  # PostgreSQL Exporter
  - job_name: 'postgres-exporter'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 15s

  # cAdvisor - Container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 15s

  # Blackbox Exporter - Endpoint monitoring
  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - http://host.docker.internal:8080/actuator/health
        - http://host.docker.internal:8080/actuator/health/readiness
        - http://host.docker.internal:8080/actuator/health/liveness
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # Grafana metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    metrics_path: /metrics
    scrape_interval: 30s

  # AlertManager metrics
  - job_name: 'alertmanager'
    static_configs:
      - targets: ['alertmanager:9093']
    metrics_path: /metrics
    scrape_interval: 30s

  # Loki metrics
  - job_name: 'loki'
    static_configs:
      - targets: ['loki:3100']
    metrics_path: /metrics
    scrape_interval: 30s

  # Jaeger metrics
  - job_name: 'jaeger'
    static_configs:
      - targets: ['jaeger:14269']
    metrics_path: /metrics
    scrape_interval: 30s

  # MinIO metrics (if available)
  - job_name: 'minio'
    static_configs:
      - targets: ['minio:9000']
    metrics_path: /minio/v2/metrics/cluster
    scrape_interval: 30s
    scrape_timeout: 10s

# Storage configuration
storage:
  tsdb:
    path: /prometheus
    retention.time: 30d
    retention.size: 10GB
    wal-compression: true

# Remote write configuration (optional, for long-term storage)
# remote_write:
#   - url: "https://prometheus.example.com/api/v1/write"
#     remote_timeout: 30s
#     queue_config:
#       capacity: 2500
#       max_shards: 200
#       min_shards: 1
#       max_samples_per_send: 500
#       batch_send_deadline: 5s
#       min_backoff: 30ms
#       max_backoff: 100ms

# Query configuration
query:
  timeout: 2m
  max_concurrency: 20
  max_samples: 50000000