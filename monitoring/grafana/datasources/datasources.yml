# Grafana datasources configuration for CAFM Backend monitoring
apiVersion: 1

datasources:
  # Prometheus datasource
  - name: Prometheus
    type: prometheus
    access: proxy
    url: http://prometheus:9090
    isDefault: true
    editable: true
    jsonData:
      httpMethod: POST
      queryTimeout: 60s
      timeInterval: 15s
      manageAlerts: true
      prometheusType: Prometheus
      prometheusVersion: 2.47.0
      cacheLevel: 'High'
      disableMetricsLookup: false
      customQueryParameters: ''
      exemplarTraceIdDestinations:
        - name: traceID
          datasourceUid: jaeger-uid
          urlDisplayLabel: 'View in Jaeger'

  # Loki datasource for logs
  - name: Loki
    type: loki
    access: proxy
    url: http://loki:3100
    editable: true
    jsonData:
      maxLines: 1000
      timeout: 60s
      derivedFields:
        - matcherRegex: "correlationId:(\\w+)"
          name: "CorrelationID"
          url: "/explore?orgId=1&left=%5B%22now-1h%22,%22now%22,%22Loki%22,%7B%22expr%22:%22%7Bapplication%3D%5C%22cafm-backend%5C%22%7D%20%7C%3D%20%5C%22$${__value.raw}%5C%22%22%7D%5D"
        - matcherRegex: "traceId:(\\w+)"
          name: "TraceID"
          url: "/explore?orgId=1&left=%5B%22now-1h%22,%22now%22,%22Jaeger%22,%7B%22query%22:%22$${__value.raw}%22%7D%5D"
          datasourceUid: jaeger-uid

  # Jaeger datasource for tracing
  - name: Jaeger
    type: jaeger
    access: proxy
    url: http://jaeger:16686
    uid: jaeger-uid
    editable: true
    jsonData:
      tracesToLogs:
        datasourceUid: loki-uid
        tags: ['job', 'instance', 'pod', 'namespace']
        mappedTags: [
          { key: 'service.name', value: 'application' },
          { key: 'service.namespace', value: 'namespace' }
        ]
        mapTagNamesEnabled: true
        spanStartTimeShift: '1h'
        spanEndTimeShift: '1h'
        filterByTraceID: true
        filterBySpanID: false
      tracesToMetrics:
        datasourceUid: prometheus-uid
        tags: [
          { key: 'service.name', value: 'application' },
          { key: 'service.namespace', value: 'namespace' }
        ]
        queries:
          - name: 'Sample query'
            query: 'sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))'
      nodeGraph:
        enabled: true
      search:
        hide: false
      spanBar:
        type: 'Tag'
        tag: 'http.path'
      
  # TestData datasource for testing
  - name: TestData
    type: testdata
    uid: testdata-uid
    access: proxy
    editable: true